package br.com.pixel3.pixel3list;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.List;

import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.ContextMenu;
import android.view.ContextMenu.ContextMenuInfo;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;
import br.com.pixel3.pixel3list.dao.AlunoDAO;
import br.com.pixel3.pixel3list.dao.PresencaDAO;
import br.com.pixel3.pixel3list.dao.UsuarioDAO;
import br.com.pixel3.pixel3list.modelo.Aluno;
import br.com.pixel3.pixel3list.modelo.Presenca;
import br.com.pixel3.pixel3list.modelo.Usuario;

public class Chamada extends Activity {

	private ListView alunos;
	private Spinner periodos;
	private TextView nomeProfessor;
	private Button btnConsulta;
	private Button btnSalvar;
	private Button btnProximo;
	private Button btnAnterior;

	private ArrayAdapter<Aluno> arrayAdapter;
	
	private UsuarioDAO usuarioDAO;
	private AlunoDAO alunoDAO;
	protected PresencaDAO presencaDAO;

	private String periodo = "Manhã";
	private List<String> lista = Arrays.asList("Manhã", "Tarde", "Noite") ;
	private List<Aluno> listaAlunos;
	private List<Presenca> presencas ;
	private List<Long> datas;
	private Calendar dataAtual;
	protected int indiceData;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.chamada) ;
		
		dataAtual = Calendar.getInstance() ;
		dataAtual.set(Calendar.HOUR, 0) ;
		dataAtual.set(Calendar.MINUTE, 0) ;
		dataAtual.set(Calendar.SECOND, 0) ;
		dataAtual.set(Calendar.MILLISECOND, 0) ;
		
		alunoDAO = new AlunoDAO(this) ;
		usuarioDAO = new UsuarioDAO(this) ;
		presencaDAO = new PresencaDAO(this) ;
		Usuario usuario = usuarioDAO.getUsuarioPorId(1L) ;
		datas = presencaDAO.qtdDatasDifetentes() ;
		indiceData = datas.size() ;
		
		alunos = (ListView) findViewById(R.id.alunos) ;
		btnAnterior = (Button) findViewById(R.id.btnAnterior) ;
		btnProximo = (Button) findViewById(R.id.btnProximo) ;
		btnSalvar = (Button) findViewById(R.id.btnSalvar) ;
		btnConsulta = (Button) findViewById(R.id.btnConsulta) ;
		nomeProfessor = (TextView) findViewById(R.id.nomeProfessor) ;
		periodos = (Spinner) findViewById(R.id.periodos) ;
		
		nomeProfessor.setText(usuario.getNome()) ;
		
		alunos.setOnItemLongClickListener(new OnItemLongClickListener() {
			public boolean onItemLongClick(AdapterView<?> adapter, View view, int posciao, long id) {
				registerForContextMenu(view) ;
				return false;
			}
		}) ;
		
		btnAnterior.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				indiceData-- ;
				dataAtual.setTimeInMillis(datas.get(indiceData)) ;
				carrega() ;
			}
		}) ;
		
		if ( indiceData >= datas.size() ) btnProximo.setEnabled(false) ;
		btnProximo.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				indiceData++ ;
				dataAtual.setTimeInMillis(datas.get(indiceData)) ;
				carrega() ;
			}
		}) ;
		
		btnSalvar.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				presencaDAO.salvarTodos(presencas) ;
			}
		}) ;
		
		btnConsulta.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				periodo = periodos.getSelectedItem().toString() ;
				carrega() ;
			}
		}) ;
		
		periodos.setAdapter(new ArrayAdapter<String>(Chamada.this, android.R.layout.simple_list_item_1, lista)) ;
		
		carrega() ;
	}
	
	@Override
	protected void onResume() {
		super.onResume();
		carrega() ;
	}
	
	@Override
	protected void onRestart() {
		super.onRestart();
		carrega() ;
	}
	
	public void carrega () {
		listaAlunos = alunoDAO.getLista(periodo) ;
		
		presencas = new ArrayList<Presenca>() ;
		for (Aluno a : listaAlunos) {
			Presenca presenca = new Presenca();
			presenca.setAlunoId(a.getId()) ;
			presenca.setData(dataAtual.getTimeInMillis()) ;
			presenca.setPeriodo(periodo) ;
			presencas.add(presenca) ;
		}
		
		arrayAdapter = new ArrayAdapter<Aluno>(Chamada.this, android.R.layout.simple_list_item_1){
			@Override
			public View getView(final int position, View convertView, ViewGroup parent) {
				LayoutInflater inflater = Chamada.this.getLayoutInflater() ;
				View view = inflater.inflate(R.layout.item, null) ;
				
				Aluno aluno = listaAlunos.get(position) ;
				
				ImageView fotoAluno = (ImageView) view.findViewById(R.id.fotoALuno) ;
				TextView nomeAluno = (TextView) view.findViewById(R.id.nomeAluno) ;
				CheckBox checkAluno = (CheckBox) view.findViewById(R.id.checkAluno) ;
				checkAluno.setOnCheckedChangeListener(new OnCheckedChangeListener() {
					
					public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
						presencas.get(position).setPresenca(isChecked) ;
					}
				}) ;
				
				fotoAluno.setImageResource(R.drawable.pessoa) ;
				nomeAluno.setText(aluno.getNome()) ;
				
				return view ;
			}
			
			@Override
			public int getCount() {
				return listaAlunos.size();
			}
			
			@Override
			public Aluno getItem(int position) {
				return listaAlunos.get(position) ;
			}
			
			@Override
			public long getItemId(int position) {
				return listaAlunos.get(position).getId() ;
			}
		};
		
		alunos.setAdapter(arrayAdapter);

	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		MenuItem novoAluno = menu.add(0, 0, 1, "Cadastrar Alunos") ;
		novoAluno.setIcon(R.drawable.novo_aluno) ;

		MenuItem meusDados = menu.add(0, 2, 1, "Meus Dados") ;
		meusDados.setIcon(R.drawable.meus_dados) ;

		MenuItem enviarPresencas = menu.add(0, 1, 1, "Enviar Presenças por Email") ;
		enviarPresencas.setIcon(R.drawable.email) ;
		
		return super.onCreateOptionsMenu(menu);
	}
	
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case 0:
			startActivity(new Intent(Chamada.this, FormAluno.class)) ;
			break;
		case 1:
			Intent i = new Intent(Intent.ACTION_SEND);
			i.setType("message/rfc822");
			i.putExtra(Intent.EXTRA_EMAIL, new String[] { "tamadrum@tamadrum.com.br" });
			i.putExtra(Intent.EXTRA_SUBJECT, "Lista de Presença");
			i.putExtra(Intent.EXTRA_TEXT, "Algum formato maluco");
			i.putExtra(Intent.EXTRA_STREAM, Uri.parse("file://sdcard/teste.csv"));
			startActivity(Intent.createChooser(i, "Selecione a sua aplicação favorita de email!"));
			
			break;
		case 2:
			startActivity(new Intent(Chamada.this, MeusDados.class)) ;
			break;
		default:
			break;
		}
		return super.onOptionsItemSelected(item);
	}
	
	@Override
	public void onCreateContextMenu(ContextMenu menu, View v, ContextMenuInfo menuInfo) {
		menu.add(0, 0, 0, "Excluir") ;
		menu.add(0, 1, 0, "Alterar") ;
		menu.add(0, 2, 0, "Enviar Presença") ;
		super.onCreateContextMenu(menu, v, menuInfo);
	}
	
	@Override
	public boolean onContextItemSelected(MenuItem item) {
		return super.onContextItemSelected(item);
	}
	
	@Override
	protected void onDestroy() {
		super.onDestroy();
		usuarioDAO.close();
		alunoDAO.close();
		presencaDAO.close();
	}
}
